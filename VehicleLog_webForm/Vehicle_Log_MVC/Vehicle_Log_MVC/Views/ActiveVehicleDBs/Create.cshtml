@model Vehicle_Log_MVC.ActiveVehicleDB

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* 
    Este módulo representa a View da interface de adição / criação de novos veículos do banco de dados ActiveVehicleDB. 
    Nele é possível configurar e formatar a interface em si e seus componentes, como os campos de texto, 
    de listas e os botões.
*@

<section class="wrapper">
    <div class="row">
        <div class="col-md-12">
            <div class="content-panel" style="padding:30px">
                <h2>Create a New Vehicle</h2>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Vehicle Type</label>
                            <div class="col-md-10">
                                <select name="VehicleType" class="form-control">
                                    @{
                                        foreach (var item in (List<Vehicle_Log_MVC.VehicleType>)ViewBag.vehicleTypeList)
                                        {
                                            <option value="@item.Family">@item.Family</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Locations</label>
                            <div class="col-md-10">
                                <select name="Locations" class="form-control">
                                    @{
                                        foreach (var item in (List<Vehicle_Log_MVC.Locations>)ViewBag.locationsList)
                                        {
                                            <option value="@item.Ford_Locations">@item.Ford_Locations</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Vehicle Model</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.VehicleModel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.VehicleModel, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">TAG</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TAG, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TAG, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Fuel Type</label>
                            <div class="col-md-10">
                                <select name="FuelType" class="form-control">
                                    @{
                                        foreach (var item in (List<Vehicle_Log_MVC.Fuel>)ViewBag.fuelList)
                                        {
                                            <option value="@item.Fuel1">@item.Fuel1</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Vehicle Year</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ModelYear, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModelYear, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Engine</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Engine, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Engine, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Power</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Power, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Power, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Weight</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "0.01", @value = "0" } })
                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Color</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Responsible</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Responsible, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Responsible, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Comments</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-success" />
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                            </div>
                        </div>
                    </div>
                }

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
            </div>
        </div>
    </div>
</section>