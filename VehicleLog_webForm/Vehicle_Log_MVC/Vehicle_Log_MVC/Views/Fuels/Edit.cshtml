@model Vehicle_Log_MVC.Fuel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*
    Este módulo representa a View da interface de edição do item selecionado do banco de dados Fuel.
    Nele será possível configurar e formatar a interface e seus componentes, como os campos de texto,
    de listas e os botões.
*@

<section class="wrapper">
    <div class="row">
        <div class="col-md-12">
            <div class="content-panel" style="padding:20px">
                <h2>Edit Fuel</h2>


                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Fuel Type</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Fuel_Type, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fuel_Type, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Fuel</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Fuel1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fuel1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Density</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Density, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0.00", @step = "0.01" } })
                                @Html.ValidationMessageFor(model => model.Density, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2" style="font-size: large">Nationality</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-success" />
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                            </div>
                        </div>
                    </div>
                }

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
            </div>
        </div>
    </div>
</section>